<!--
  - The MIT License
  -
  - Copyright (c) 2010-2011, Manufacture FranÃ§aise des Pneumatiques Michelin,
  - Thomas Maurel, Romain Seguy
  -
  - Permission is hereby granted, free of charge, to any person obtaining a copy
  - of this software and associated documentation files (the "Software"), to deal
  - in the Software without restriction, including without limitation the rights
  - to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  - copies of the Software, and to permit persons to whom the Software is
  - furnished to do so, subject to the following conditions:
  -
  - The above copyright notice and this permission notice shall be included in
  - all copies or substantial portions of the Software.
  -
  - THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  - IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  - LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  - THE SOFTWARE.
  -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
          xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:local="local">

    <j:set var="id" value="${h.generateId()}"/>
    <j:set var="globalGrantedRoles" value="${it.strategy.getGrantedRoles(it.strategy.GLOBAL)}"/>
    <j:set var="globalSIDs" value="${it.strategy.getSIDs(it.strategy.GLOBAL)}"/>


    <div id="globalUserInputFilter">
      <f:entry title="${%Filter by User}">
        <input id="globalUserInput" class="user-input-filter jenkins-input setting-input" data-table-id="globalRoles"/>
      </f:entry>
    </div>
    <div id="globalRoleInputFilter">
      <f:entry title="${%Filter by Role}">
        <input id="globalRoleInput" class="role-input-filter jenkins-input setting-input" data-table-id="globalRoles"/>
      </f:entry>
    </div>
    <table id="globalRoles" class="center-align global-matrix-authorization-strategy-table" name="data">

      <!-- The first row will show grouping -->
      <tr class="group-row highlight-row">
        <td class="start" />
        <td class="pane-header blank">
          ${%User/group}
        </td>
        <j:forEach var="role" items="${globalGrantedRoles}">
          <j:set var="permissionList" value="&lt;b&gt;Permissions&lt;/b&gt;:"/>
          <j:forEach var="p" items="${role.key.permissions}">
            <j:set var="permissionList" value="${permissionList}&lt;br/&gt;${p.group.title}/${p.name}"/>
          </j:forEach>
          <j:set var="permissionList" value="${permissionList} &lt;br/&gt;"/>
          <td class="pane-header">
            <span tooltip="${permissionList}">${role.key.name}</span>
          </td>
        </j:forEach>
        <l:isAdmin><td class="stop" /></l:isAdmin>
      </tr>
      <tr name="[USER:anonymous]" class="highlight-row">
        <local:userRow sid="anonymous" type="${it.strategy.GLOBAL}" permissionType="USER"/>
      </tr>
      <tr name="[GROUP:authenticated]" class="highlight-row">
        <local:userRow sid="authenticated" type="${it.strategy.GLOBAL}" permissionType="GROUP"/>
      </tr>
      <j:forEach var="entry" items="${globalSIDs}">
        <j:if test="${entry.sid != 'authenticated' or entry.type.toString() != 'GROUP'}">
	        <tr name="[${entry.type}:${entry.sid}]" class="permission-row highlight-row" data-descriptor-url="${descriptorPath}">
	          <local:userRow sid="${entry.sid}" title="${entry.sid}" permissionType="${entry.type.toString()}" type="${it.strategy.GLOBAL}"/>
	        </tr>
	      </j:if>
      </j:forEach>
      <tr name="__unused__" id="${id}" style="display:none" class="permission-row highlight-row" data-descriptor-url="${descriptorPath}">
        <local:userRow title="{{USER}}" type="${it.strategy.GLOBAL}"/>
      </tr>
      <!-- The last row is used to repeat the header (if more than 19 lines) -->
      <j:if test="${globalSIDs.size() ge 20}">
        <tr class="group-row highlight-row">
          <td class="start" />
          <td class="pane-header blank">
            ${%User/group}
          </td>
          <j:forEach var="role" items="${globalGrantedRoles}">
            <td class="pane-header">
              <span>${role.key.name}</span>
            </td>
          </j:forEach>
          <td class="stop" />
        </tr>
      </j:if>
    </table>

    <l:isAdmin>
      <br/>
      <local:addButtons type="globalRoles" sids="${globalSIDs}" id="${id}" roles="${globalGrantedRoles}"/>
    </l:isAdmin>

    <script>
      <j:if test="${globalGrantedRoles.size() lt 20}">
        document.getElementById('globalRoleInputFilter').style.display = "none"
      </j:if>
      <j:if test="${globalSIDs.size() lt 10}">
        document.getElementById('globalUserInputFilter').style.display = "none"
      </j:if>

      var globalSidCount = ${globalSIDs.size()};
      
      var globalMaster = document.getElementById('${id}');
      var globalTable = globalMaster.parentNode;
      globalTable.removeChild(globalMaster);

      var globalTableHighlighter;
      
      Event.observe(window, 'load', function(event) {
         globalTableHighlighter = new TableHighlighter('globalRoles', 0);
      });

      var deleteAssignedGlobalRole = function(e) {
        e.onclick = function() {
          var tr = findAncestor(this,"TR");
          tr.parentNode.removeChild(tr);
          globalSidCount--;
          if (globalSidCount &lt; 10) {
            document.getElementById('globalUserInputFilter').style.display = "none";
            document.getElementById('globalUserInput').value = "";
            event = new Event("keyup");
            document.getElementById('globalUserInput').dispatchEvent(event);
          }
          return false;
        }
        e = null; <!-- avoid memory leak -->
      }
      
      Behaviour.register({
        "#globalRoles TD.start A.remove" : deleteAssignedGlobalRole,
        "#globalRoles TD.stop A.remove" : deleteAssignedGlobalRole,
      });

      Behaviour.specify(
        ".globalRoles-add-button", "RoleBasedAuthorizationStrategy", 0, function(e) {
          makeButton(e,function(e) {
            addButtonAction(e, globalMaster, globalTable, globalTableHighlighter);
            globalSidCount++;
            if (globalSidCount >= 10) {
              document.getElementById('globalUserInputFilter').style.display = "block";
            }
          });
        } 
      );
      
    </script>
</j:jelly>

<!--
  - The MIT License
  -
  - Copyright (c) 2013, Oleg Nenashev, Synopsys Inc.
  -
  - Original file: manage-project-roles.jelly
  - Thomas Maurel & Romain Seguy, Manufacture FranÃ§aise des Pneumatiques Michelin
  -
  - Permission is hereby granted, free of charge, to any person obtaining a copy
  - of this software and associated documentation files (the "Software"), to deal
  - in the Software without restriction, including without limitation the rights
  - to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  - copies of the Software, and to permit persons to whom the Software is
  - furnished to do so, subject to the following conditions:
  -
  - The above copyright notice and this permission notice shall be included in
  - all copies or substantial portions of the Software.
  -
  - THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  - IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  - LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  - THE SOFTWARE.
  -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
          xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:local="local">

  <j:set var="id" value="${h.generateId()}"/>
  <j:set var="agentGrantedRoles" value="${it.strategy.getGrantedRoles(it.strategy.SLAVE)}"/>
  <j:set var="agentSIDs" value="${it.strategy.getSIDs(it.strategy.SLAVE)}"/>

  <table id="agentRoles" class="center-align global-matrix-authorization-strategy-table" name="data">

      <!-- The first row will show grouping -->
      <tr class="group-row highlight-row">
        <td class="start" />
        <td class="pane-header blank">
          ${%User/group}
        </td>
        <j:forEach var="role" items="${agentGrantedRoles}">
          <j:set var="permissionList" value="&lt;b&gt;Permissions&lt;/b&gt;:"/>
          <j:forEach var="p" items="${role.key.permissions}">
            <j:set var="permissionList" value="${permissionList}&lt;br/&gt;${p.group.title}/${p.name}"/>
          </j:forEach>
          <j:set var="permissionList" value="${permissionList} &lt;br/&gt; &lt;b&gt;Pattern&lt;/b&gt;: ${h.escape(role.key.pattern.toString())}"/>
          <td class="pane-header">
            <span tooltip="${permissionList}">${role.key.name}</span>
          </td>
        </j:forEach>
        <td class="stop"/>
      </tr>
      <j:forEach var="sid" items="${agentSIDs}">
        <tr name="[${sid}]" class="permission-row highlight-row" data-descriptor-url="${descriptorPath}">
          <local:userRow sid="${sid}" title="${sid}" global="${false}"  type="${it.strategy.SLAVE}"/>
        </tr>
      </j:forEach>
      <tr name="anonymous" class="highlight-row">
        <local:userRow sid="anonymous" title="${%Anonymous}" global="${false}" type="${it.strategy.SLAVE}"/>
      </tr>
      <tr name="__unused__" id="${id}" style="display:none" class="permission-row highlight-row" data-descriptor-url="${descriptorPath}">
        <local:userRow title="{{USER}}" global="${false}"  type="${it.strategy.SLAVE}"/>
      </tr>
      <!-- The last row is used to repeat the header (if more than 19+1 lines) -->
      <j:if test="${agentSIDs.size() ge 20}">
        <tr class="group-row highlight-row">
          <td class="start" />
          <td class="pane-header blank">
            ${%User/group}
          </td>
          <j:forEach var="role" items="${agentGrantedRoles}">
            <td class="pane-header">
              ${role.key.name}
            </td>
          </j:forEach>
          <td class="stop" />
        </tr>
      </j:if>
    </table>

    <l:isAdmin>
      <br/>
      <local:addButtons type="agent" sids="${agentSIDs}" id="${id}"/>
    </l:isAdmin>

    <script>
      var agentMaster = document.getElementById('${id}');
      var agentTable = agentMaster.parentNode;
      agentTable.removeChild(agentMaster);

      var agentTableHighlighter
      Event.observe(window, 'load', function(event) {
         agentTableHighlighter = new TableHighlighter('agentRoles', 0);
      });

      var deleteAssignedAgentRole = function(e) {
        e.onclick = function() {
          var tr = findAncestor(this,"TR");
          tr.parentNode.removeChild(tr);
          return false;
        }
        e = null; <!-- avoid memory leak -->
      }
      
      Behaviour.register({
        "#agentRoles TD.start A" : deleteAssignedAgentRole,
        "#agentRoles TD.stop A" : deleteAssignedAgentRole,
      });

      Behaviour.specify(
        ".agent-add-button", "RoleBasedAuthorizationStrategy", 0, function(e) {
          makeButton(e,function(e) {
            addButtonAction(e, agentMaster, agentTable, agentTableHighlighter);
          });
        } 
      );
      
    </script>
</j:jelly>

<!--
  - The MIT License
  -
  - Copyright (c) 2013, Oleg Nenashev, Synopsys Inc.
  -
  - OriginalFile: manage-project-roles.jelly
  - Thomas Maurel & Romain Seguy, Manufacture FranÃ§aise des Pneumatiques Michelin,
  - 
  -
  - Permission is hereby granted, free of charge, to any person obtaining a copy
  - of this software and associated documentation files (the "Software"), to deal
  - in the Software without restriction, including without limitation the rights
  - to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  - copies of the Software, and to permit persons to whom the Software is
  - furnished to do so, subject to the following conditions:
  -
  - The above copyright notice and this permission notice shall be included in
  - all copies or substantial portions of the Software.
  -
  - THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  - IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  - LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  - THE SOFTWARE.
  -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
          xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:local="local">

  <table id="slaveRoles" class="center-align global-matrix-authorization-strategy-table" name="data">

      <!-- The first row will show grouping -->
      <tr class="group-row">
        <td rowspan="2" class="start" />
        <td rowspan="2" class="pane-header blank">
          ${%Role}
        </td>
        <td rowspan="2" class="pane-header blank">
          ${%Pattern}
        </td>
        <j:forEach var="g" items="${slaveGroups}">
          <j:set var="cnt" value="${0}" />
          <j:forEach var="p" items="${g.permissions}">
            <j:if test="${it.strategy.descriptor.showPermission(it.strategy.SLAVE, p, hasDangerous)}">
              <j:set var="cnt" value="${cnt+1}"/>
            </j:if>
          </j:forEach>

          <td class="pane-header" colspan="${cnt}">
            ${g.title}
          </td>
        </j:forEach>
        <td rowspan="2" class="stop" />
      </tr>
      <!-- The second row for individual permission -->
      <tr class="caption-row">
        <j:forEach var="g" items="${slaveGroups}">
          <j:forEach var="p" items="${g.permissions}">
            <j:if test="${it.strategy.descriptor.showPermission(it.strategy.SLAVE, p, hasDangerous)}">
              <th class="pane" tooltip="${p.description}">
                ${p.name}
              </th>
            </j:if>
          </j:forEach>
        </j:forEach>
      </tr>
      <j:set var="nbSlaveRoles" value="${0}" />
      <j:forEach var="role" items="${it.strategy.getGrantedRoles(it.strategy.SLAVE)}">
        <tr name="[${role.key.name}]" class="permission-row">
          <local:roleRow title="${role.key.name}" role="${role.key}" global="${false}" type="${it.strategy.SLAVE}"
                         showDangerous="${hasDangerous}" project="${false}"/>
        </tr>
        <j:set var="nbSlaveRoles" value="${nbSlaveRoles+1}"/>
      </j:forEach>
      <j:set var="id" value="${h.generateId()}"/>
      <tr id="${id}" style="display:none" class="permission-row">
        <local:roleRow role="${null}" global="${false}" type="${it.strategy.SLAVE}" showDangerous="${hasDangerous}"/>
      </tr>
      <!-- The last two rows are used to repeat the header (if more than 20 lines) -->
      <j:if test="${nbSlaveRoles ge 20}">
        <tr class="caption-row">
          <td rowspan="2" class="start" />
          <td rowspan="2" class="pane-header blank">
            ${%Role}
          </td>
          <td rowspan="2" class="pane-header blank">
            ${%Pattern}
          </td>
          <j:forEach var="g" items="${slaveGroups}">
            <j:forEach var="p" items="${g.permissions}">
              <j:if test="${it.strategy.descriptor.showPermission(it.strategy.SLAVE, p, hasDangerous)}">
                <th class="pane" tooltip="${p.description}">
                  ${p.name}
                </th>
              </j:if>
            </j:forEach>
          </j:forEach>
        </tr>
        <tr class="group-row">
          <j:forEach var="g" items="${slaveGroups}">
            <j:set var="cnt" value="${0}" />
            <j:forEach var="p" items="${g.permissions}">
              <j:if test="${it.strategy.descriptor.showPermission(it.strategy.SLAVE, p, hasDangerous)}">
                <j:set var="cnt" value="${cnt+1}"/>
              </j:if>
            </j:forEach>

            <td class="pane-header" colspan="${cnt}">
              ${g.title}
            </td>
          </j:forEach>
          <td rowspan="2" class="stop" />
        </tr>
      </j:if>
    </table>
    <br /><br />
    <f:entry title="${%Role to add}">
      <f:textbox type="text" id="${id}text" />
    </f:entry>
    <f:entry help="${rootURL}/plugin/role-strategy/help/help-pattern.html" title="${%Pattern}">
      <f:textbox type="text" id="${id}pattern" />
    </f:entry>
    <f:entry>
      <input type="button" value="${%Add}" id="${id}button"/>
    </f:entry>
    
    <script>
      var tableHighlighter;
      (function() {
        <!-- place master outside the DOM tree so that it won't creep into the submitted form -->
        var master = document.getElementById('${id}');
        var table = master.parentNode;
        table.removeChild(master);

        makeButton($$('${id}button'), function (e) {
          <!-- when 'add' is clicked... -->
          var name = $$('${id}text').value;
          var pattern = $$('${id}pattern').value;
          if(name=="") {
            alert("Please enter a role name");
            return;
          }
          if(pattern=="") {
            alert("Please enter a pattern");
            return;
          }
          if(findElementsBySelector(table,"TR").find(function(n){return n.getAttribute("name")=='['+name+']';})!=null) {
            alert("Entry for '"+name+"' already exists");
            return;
          }

          if(document.importNode!=null)
            copy = document.importNode(master,true);
          else
            copy = master.cloneNode(true); <!-- for IE -->
          copy.removeAttribute("id");
          copy.removeAttribute("style");

          var child = copy.childNodes[1];
          var doubleQuote = '"';
          child.innerHTML = name;
          child.next().innerHTML = doubleQuote + pattern + doubleQuote;

          var hidden = document.createElement('input');
          hidden.setAttribute('name', '[pattern]');
          hidden.setAttribute('type', 'hidden');
          hidden.setAttribute('value', pattern);
          child.next().appendChild(hidden);

          copy.setAttribute("name",'['+name+']');
          <j:if test="${nbSlaveRoles lt 20}">
            table.appendChild(copy);
          </j:if>
          <j:if test="${nbSlaveRoles ge 20}">
            table.insertBefore(copy,table.childNodes[table.rows.length-2]);
          </j:if>
          slavetableHighlighter.scan(copy);
          Behaviour.applySubtree(findAncestor(table,"TABLE"));
        });
      })();

      Event.observe(window, 'load', function(event) {
         slavetableHighlighter = new TableHighlighter('slaveRoles', 3, 2);
      });

      var deleteSlaveRole = function(e) {
        e.onclick = function() {
          var tr = findAncestor(this,"TR");
          tr.parentNode.removeChild(tr);
          return false;
        }
        e = null; <!-- avoid memory leak -->
      }
      Behaviour.register({"#slaveRoles TD.stop A" : deleteSlaveRole});
      Behaviour.register({"#slaveRoles TD.start A" : deleteSlaveRole});

      Behaviour.register({"#slaveRoles TD.in-place-edit" : function(e) {
        e.ondblclick = function() {
          if(this.childNodes.length == 2) {
            this.innerHTML = '<input type="text" name="[pattern]" value="' + this.childNodes[1].value + '" size="' + (this.childNodes[1].value.length+10) + '"/>';
          }
          else {
            this.innerHTML = this.childNodes[0].value.escapeHTML() + '<input type="hidden" name="[pattern]" value="' + this.childNodes[0].value + '"/>';
          }
          return false;
        }
        e = null; <!-- again and again, avoid memory leak -->
      }});
    </script>
</j:jelly>
